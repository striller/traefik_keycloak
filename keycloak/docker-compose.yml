version: '3'
volumes:
  postgres_data:
      driver: local

services:
  postgres:
      image: postgres:latest
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: "${POSTGRES_DATABASE}"
        POSTGRES_USER: "${POSTGRES_USER}"
        POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      restart: unless-stopped
      networks:
        - internal
      labels:
        - traefik.enable=false

  pgbackups:
    container_name: Backup
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ./backup:/backups
    links:
      - postgres:db
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DATABASE} 
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
      - SCHEDULE=@every 0h30m00s
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=81

  keycloak:
      image: quay.io/keycloak/keycloak:latest
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: "${POSTGRES_DATABASE}"
        DB_USER: "${POSTGRES_USER}"
        DB_SCHEMA: public
        DB_PASSWORD: "${POSTGRES_PASSWORD}"
        KEYCLOAK_USER: "${KEYCLOAK_USER}"
        KEYCLOAK_PASSWORD: "${KEYCLOAK_PASSWORD}"
        PROXY_ADDRESS_FORWARDING: "true"
        JDBC_PARAMS: "useSSL=false"
      depends_on:
        - postgres
      restart: unless-stopped
      labels:
        - traefik.enable=true
        - traefik.http.routers.keycloak.rule=Host(`$domain_for_keycloak`)
        - traefik.http.routers.keycloak.tls=true
        - traefik.http.routers.keycloak.entrypoints=websecure
        - traefik.http.routers.keycloak.tls.certresolver=lets-encrypt
        - traefik.http.services.keycloak.loadbalancer.server.port=8080
      networks:
       - internal
       - web

networks:
  web:
    external: true
  internal:
    external: false
